{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/Final Project/SyncHUB-APP/synchub/frontend/src/context/FileContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileContext = /*#__PURE__*/createContext();\nexport const useFiles = () => {\n  _s();\n  return useContext(FileContext);\n};\n_s(useFiles, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const FileProvider = ({\n  children\n}) => {\n  _s2();\n  const [files, setFiles] = useState([]);\n  const [syncStatus, setSyncStatus] = useState('checking');\n  const fetchFiles = async () => {\n    try {\n      const res = await axios.get('/api/files');\n      setFiles(res.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n  const uploadFile = async ({\n    title,\n    description,\n    file\n  }) => {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('file', file);\n    const res = await axios.post('/api/files/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: progressEvent => {\n        console.log('Upload progress:', progressEvent.loaded / progressEvent.total);\n      }\n    });\n    fetchFiles(); // Refresh files\n    return res.data;\n  };\n  const downloadFile = async id => {\n    const res = await axios.get(`/api/files/${id}/download`, {\n      responseType: 'blob'\n    });\n    const url = window.URL.createObjectURL(new Blob([res.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'file'); // You might want to get the filename from the response\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  };\n  const syncAll = async () => {\n    await axios.post('/api/sync/trigger');\n    fetchFiles();\n  };\n  const deleteFile = async id => {\n    await axios.delete(`/api/files/${id}`);\n    fetchFiles();\n  };\n  const checkSync = async () => {\n    try {\n      const res = await axios.get('/api/sync/status');\n      setSyncStatus(res.data.status);\n    } catch (error) {\n      setSyncStatus('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FileContext.Provider, {\n    value: {\n      files,\n      syncStatus,\n      fetchFiles,\n      uploadFile,\n      downloadFile,\n      syncAll,\n      deleteFile,\n      checkSync\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(FileProvider, \"gm+9dCZHEhVC7PtYXNTmDFA/7lg=\");\n_c = FileProvider;\nvar _c;\n$RefreshReg$(_c, \"FileProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","jsxDEV","_jsxDEV","FileContext","useFiles","_s","FileProvider","children","_s2","files","setFiles","syncStatus","setSyncStatus","fetchFiles","res","get","data","error","console","uploadFile","title","description","file","formData","FormData","append","post","headers","onUploadProgress","progressEvent","log","loaded","total","downloadFile","id","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","syncAll","deleteFile","delete","checkSync","status","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/moringa/Documents/Final Project/SyncHUB-APP/synchub/frontend/src/context/FileContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\n\nconst FileContext = createContext();\n\nexport const useFiles = () => useContext(FileContext);\n\nexport const FileProvider = ({ children }) => {\n  const [files, setFiles] = useState([]);\n  const [syncStatus, setSyncStatus] = useState('checking');\n\n  const fetchFiles = async () => {\n    try {\n      const res = await axios.get('/api/files');\n      setFiles(res.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  const uploadFile = async ({ title, description, file }) => {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('file', file);\n    const res = await axios.post('/api/files/upload', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n      onUploadProgress: (progressEvent) => {\n        console.log('Upload progress:', progressEvent.loaded / progressEvent.total);\n      }\n    });\n    fetchFiles(); // Refresh files\n    return res.data;\n  };\n\n  const downloadFile = async (id) => {\n    const res = await axios.get(`/api/files/${id}/download`, { responseType: 'blob' });\n    const url = window.URL.createObjectURL(new Blob([res.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'file'); // You might want to get the filename from the response\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  };\n\n  const syncAll = async () => {\n    await axios.post('/api/sync/trigger');\n    fetchFiles();\n  };\n\n  const deleteFile = async (id) => {\n    await axios.delete(`/api/files/${id}`);\n    fetchFiles();\n  };\n\n  const checkSync = async () => {\n    try {\n      const res = await axios.get('/api/sync/status');\n      setSyncStatus(res.data.status);\n    } catch (error) {\n      setSyncStatus('error');\n    }\n  };\n\n  return (\n    <FileContext.Provider value={{ files, syncStatus, fetchFiles, uploadFile, downloadFile, syncAll, deleteFile, checkSync }}>\n      {children}\n    </FileContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}